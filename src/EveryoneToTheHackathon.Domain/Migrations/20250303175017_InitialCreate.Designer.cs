// <auto-generated />
using System;
using EveryoneToTheHackathon.Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EveryoneToTheHackathon.Domain.Migrations
{
    [DbContext(typeof(HackathonContext))]
    [Migration("20250303175017_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("EmployeeId", "Role");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.Hackathon", b =>
                {
                    b.Property<Guid>("HackathonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("HarmonicMean")
                        .HasPrecision(16, 12)
                        .HasColumnType("numeric(16,12)");

                    b.HasKey("HackathonId");

                    b.ToTable("Hackathons");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.HackathonDreamTeam", b =>
                {
                    b.Property<Guid>("HackathonId")
                        .HasColumnType("uuid");

                    b.Property<int>("TeamLeadId")
                        .HasColumnType("integer");

                    b.Property<int>("JuniorId")
                        .HasColumnType("integer");

                    b.Property<string>("JuniorRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeamLeadRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("HackathonId", "TeamLeadId", "JuniorId");

                    b.HasIndex("JuniorId", "JuniorRole");

                    b.HasIndex("TeamLeadId", "TeamLeadRole");

                    b.ToTable("HackathonDreamTeams");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.HackathonEmployeeWishListMapping", b =>
                {
                    b.Property<Guid>("MappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("HackathonId")
                        .HasColumnType("uuid");

                    b.HasKey("MappingId");

                    b.HasIndex("HackathonId");

                    b.HasIndex("EmployeeId", "EmployeeRole", "HackathonId")
                        .IsUnique();

                    b.ToTable("HackathonEmployeeWishListMappings");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.WishList", b =>
                {
                    b.Property<Guid>("WishListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MappingId")
                        .HasColumnType("uuid");

                    b.Property<int>("PreferenceValue")
                        .HasColumnType("integer");

                    b.Property<int>("PreferredEmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("PreferredEmployeeRole")
                        .HasColumnType("integer");

                    b.HasKey("WishListId");

                    b.HasIndex("MappingId");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.HackathonDreamTeam", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Domain.Entities.Hackathon", "Hackathon")
                        .WithMany("HackathonDreamTeams")
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveryoneToTheHackathon.Domain.Entities.Employee", "Junior")
                        .WithMany("DreamTeamJuniors")
                        .HasForeignKey("JuniorId", "JuniorRole")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EveryoneToTheHackathon.Domain.Entities.Employee", "TeamLead")
                        .WithMany("DreamTeamLeads")
                        .HasForeignKey("TeamLeadId", "TeamLeadRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hackathon");

                    b.Navigation("Junior");

                    b.Navigation("TeamLead");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.HackathonEmployeeWishListMapping", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Domain.Entities.Hackathon", "Hackathon")
                        .WithMany("HackathonEmployeeWishListMappings")
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveryoneToTheHackathon.Domain.Entities.Employee", "Employee")
                        .WithMany("HackathonEmployeeWishListMappings")
                        .HasForeignKey("EmployeeId", "EmployeeRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Hackathon");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.WishList", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Domain.Entities.HackathonEmployeeWishListMapping", "HackathonEmployeeWishListMappings")
                        .WithMany("WishLists")
                        .HasForeignKey("MappingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HackathonEmployeeWishListMappings");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.Employee", b =>
                {
                    b.Navigation("DreamTeamJuniors");

                    b.Navigation("DreamTeamLeads");

                    b.Navigation("HackathonEmployeeWishListMappings");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.Hackathon", b =>
                {
                    b.Navigation("HackathonDreamTeams");

                    b.Navigation("HackathonEmployeeWishListMappings");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Domain.Entities.HackathonEmployeeWishListMapping", b =>
                {
                    b.Navigation("WishLists");
                });
#pragma warning restore 612, 618
        }
    }
}
